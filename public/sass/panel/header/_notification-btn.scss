.notify {
  position: relative;

  &__btn,
  &__item {
    @include standart-Btn;
  }

  &__title {
    @include standart-Font;
  }

  &__list {
    @include flexbox(flex, column, flex-start, center, $gap);
    @include position(fixed, $headerHeight, auto, auto, 50%);
    @include size($height: calc(100% - #{$headerHeight}));
    @include scrollbar;
    opacity: 0;
    padding: $gap;
    visibility: hidden;
    overflow-y: auto;
    background: darken($mainBg, 7%);
    transition: $transition;
    transform: translateX(-50%) translateY(-150%);

    li {
      width: 100%;
    }
  }

  &__item {
    width: 100%;
    padding: 0 $padding;
    justify-content: space-between;
    background-color: lighten($mainBg, 5%);
  }

  &.open>.notify__list {
    opacity: 1;
    visibility: visible;
    z-index: $z-index-modal;
    transform: translateX(-50%) translateY(0%);
  }
}

@media (min-width: 1024px) {
  .notify {

    &__btn::before {
      content: "";
      @include position(absolute, 50px, 0.9rem);
      @include triangle(15px, darken($mainBg, 7%), up);
      transform: translateY(-1050%);
      transition: $transition;
    }

    &.open &__btn::before {
      transform: translateY(0%);
    }

    &__list {
      @include position(absolute, 65px, -30px, unset, unset);
      @include size($notifyWidth);
      border-radius: $BtnBorderRadius;
      transform: translateX(0%);
      box-shadow: rgba(0, 0, 0, 0.25) 0px 54px 55px, rgba(0, 0, 0, 0.12) 0px -12px 30px, rgba(0, 0, 0, 0.12) 0px 4px 6px, rgba(0, 0, 0, 0.17) 0px 12px 13px, rgba(0, 0, 0, 0.09) 0px -3px 5px;
    }

    &.open>.notify__list {
      transform: translateX(-0%);
      z-index: $z-index-modal;
    }
  }
}

.alert {

  &-circle::after,
  &-count {
    background: $alertColor;
    outline: 3px solid $mainBg;
    border-radius: 100%;
  }

  &-circle {
    background-color: darken($mainBg, 15%);
    position: relative;

    &::after {
      content: "";
      @include position(absolute, 0, 0);
      @include size(calc($alertSize / 2));
    }
  }

  &-count {
    @include size(calc($alertSize / 1.2));
    @include flexbox(flex, row, center, center);
    @include position(absolute, calc(-#{$alertSize} / 2), calc(-#{$alertSize} / 2));
  }
}