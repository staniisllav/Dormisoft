 //usefull mixin
 @mixin wh($w, $h) {
   width: $w;
   height: $h;
 }

 //=========================================================================================== The new mixins
 //  The mixin for Width and height
 @mixin size($width: 100%, $height: $width) {
   width: $width;
   height: $height;
 }

 @mixin position($position, $top: null, $right: null, $bottom: null, $left: null) {
   position: $position;

   @if $top !=null {
     top: $top;
   }

   @if $right !=null {
     right: $right;
   }

   @if $bottom !=null {
     bottom: $bottom;
   }

   @if $left !=null {
     left: $left;
   }
 }


 // The mixin for Flexbox
 @mixin flexbox($display: flex,
   $direction: row,
   $justifyContent: null,
   $alignItems: null,
   $gap: null,
   $placeContent: null,
   $placeItems: null,
   $wrap: nowrap,
   $shrink: 0,
   $grow: 0,
   $alignContent: null,
   $justifyItems: null) {

   display: $display;
   flex-direction: $direction;
   gap: $gap;

   @if $placeContent ==null {
     @if $alignContent {
       align-content: $alignContent;
     }

     @if $justifyContent {
       justify-content: $justifyContent;
     }
   }

   @else {
     place-content: $placeContent;
   }

   @if $placeItems ==null {
     @if $alignItems {
       align-items: $alignItems;
     }

     @if $justifyItems {
       justify-items: $justifyItems;
     }
   }

   @else {
     place-items: $placeItems;
   }

   flex-wrap: $wrap;
   flex-shrink: $shrink;
   flex-grow: $grow;
 }

 //  Mixin for triangle
 @mixin triangle($size, $color, $direction: down) {
   width: 0;
   height: 0;

   border-left: $size solid transparent;
   border-right: $size solid transparent;

   @if $direction ==down {
     border-top: $size solid $color;
   }

   @else if $direction ==up {
     border-bottom: $size solid $color;
   }

   @else if $direction ==left {
     border-right: $size solid $color;
     border-left: 0;
   }

   @else if $direction ==right {
     border-left: $size solid $color;
     border-right: 0;
   }
 }


 //=======================================================================================================


 //  @mixin w($w) {
 //    width: $w;
 //  }

 @mixin centering {
   display: flex;
   align-items: center;
   justify-content: center;
 }

 @mixin BtnHover($hoverEffect: $BtnHover, $activeEffect: $secondColor, $textColor: $mainBg ) {

   &:hover {
     background-color: $hoverEffect; //$BtnHover
     color: $activeEffect;

     &>.sidebar__icon {
       background-color: $hoverEffect; //$BtnHover
     }
   }

   &.active,
   &:active,
   &:focus-visible {
     background-color: $activeEffect; //$secondColor
     color: $textColor; //$mainBg

     &>.sidebar__icon {
       background-color: $activeEffect; //$secondColor

       svg {
         stroke: $textColor; //$mainBg
       }
     }

     svg {
       stroke: $textColor; //$mainBg
     }
   }
 }

 @mixin standart-Font {
   font-size: $fSize;
   font-weight: $fWeight;
   color: $secondColor;
 }

 @mixin standart-Btn {
   @include centering;
   @include BtnHover;
   @include standart-Font;
   font-weight: 400 !important;

   background: $darkBg;
   outline: none;
   text-decoration: none;
   box-shadow: $BtnShadow;
   text-align: center;
   cursor: pointer;

   border: none;
   border-radius: $BtnBorderRadius;

   padding: 0;

   width: $BtnSize;
   height: $BtnSize;

   transition: $transition;

   img,
   svg {
     width: $BtnSvgSize;
     height: $BtnSvgSize;
     stroke: $BtnSvgColor;
     stroke-width: $btnSvgBold;
     background-color: transparent;
     transition: $transition;
     pointer-events: none;
   }

   //  Delete button for mixin
   &.delete {
     @include BtnHover(darken($alertColor, 20%), darken($alertColor, 40%), $secondColor);
     background-color: $alertColor;
   }

   &.edit {
     @include BtnHover($hoverEffect: darken($secondColor, 30%), $activeEffect: darken($secondColor, 30%));
     background-color: $white;

     svg {
       stroke: $mainBg;
     }
   }

   &.submit {
     @include BtnHover(darken($secondColor, 30%), darken($secondColor, 50%), $darkBg);
     background-color: rgb(180 242 215);
     color: $mainBg;
   }
 }

 @mixin scrollbar {
   &::-webkit-scrollbar {
     width: 10px;
     background: lighten($darkBg, 5%);
     border-top-right-radius: $BtnBorderRadius;
     border-bottom-right-radius: $BtnBorderRadius;
   }

   &::-webkit-scrollbar-thumb {
     background: $darkBg;
     border-radius: $BtnBorderRadius;
     transition: $transition;
   }

   &::-webkit-scrollbar-thumb:hover {
     background: darken($darkBg, 5%);
   }
 }

 @mixin standart-Input {
   @include scrollbar;

   border: 1.5px solid $mainBg;
   border-radius: $BtnBorderRadius;
   padding: $padding;

   background: $white;
   color: $mainBg;
   box-shadow: $BtnShadow;
   font-weight: 400;

   width: 100%;
   height: $BtnSize;

   resize: none;
   outline: none;
   text-decoration: none;
   -webkit-appearance: none;
   -moz-appearance: none;
 }

 // Header Button (Profile and Search)
 @mixin headBtn {
   & {
     top: 0;
     left: 0;
     gap: $gap;
     opacity: 0;
     width: 100%;
     height: 100%;
     display: grid;
     padding: $padding;
     position: absolute;
     align-items: center;
     transition: $transition;
     background-color: $mainBg;
     transform: translateY(-200%);
     grid-template-columns: repeat(4, 1fr);

     & input {
       @include BtnHover($darkBg, $darkBg , $secondColor);
       text-align: left;
       padding: 0 $padding;
     }

     &__item,
     &__icon {
       @include standart-Btn;
     }

     &__item {
       width: 100%;

       &:nth-child(2) {
         grid-column: 2/max;
       }

       &:nth-child(3) {
         grid-column: 1/3;
       }

       &:last-child {
         grid-column: 3/max;
       }
     }

     &.active {
       opacity: 1;
       transform: translateY(0);
       z-index: $z-index-active;
     }
   }

   @media (min-width: 1024px) {
     & {
       gap: 0;
       padding: 0;
       opacity: 1;
       display: flex;
       width: $BtnSize;
       transform: unset;
       position: relative;

       &__icon {
         display: none;
       }

       &__item {
         &:nth-child(2) {
           font-size: 0;
           padding: 0;
           white-space: nowrap;
         }

         &:nth-child(2),
         &:nth-child(3),
         &:last-child {
           width: 0;
           opacity: 0;
           border-radius: 0;
           visibility: hidden;
         }

         &:last-child {
           border-radius: 0 $BtnBorderRadius $BtnBorderRadius 0;
         }
       }

       &.active {
         width: $headBtnWidth;

         &>.profile__item,
         &>.search__item {
           opacity: 1;
           width: $BtnSize;
           visibility: visible;

           &:first-child {
             border-radius: $BtnBorderRadius 0 0 $BtnBorderRadius;
           }

           &:nth-child(2) {
             flex: 1;
             width: unset;
             font-size: unset;
             padding: 0 $padding;
           }
         }
       }
     }
   }
 }